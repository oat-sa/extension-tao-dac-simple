{
  "version": 3,
  "sources": [
    "../controller/admin/line!tpl",
    "../controller/admin/index.js",
    "../controller/routes.js",
    "../../../../../../../../../module-create.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvlUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChCA;AACA;AACA",
  "file": "taoDacSimple/loader/taoDacSimple.bundle.js",
  "sourcesContent": [
    "\ndefine('tpl!taoDacSimple/controller/admin/line', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n  buffer += \"<tr>\\n    <td>\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td>\\n    <td>\\n        \";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\n        <input type=\\\"hidden\\\" name=\\\"users[\";\n  if (helper = helpers.user) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.user); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"][type]\\\" value=\\\"\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    </td>\\n    <td>\\n        <label>\\n            <input type=\\\"checkbox\\\" class=\\\"privilege-GRANT\\\" name=\\\"users[\";\n  if (helper = helpers.user) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.user); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"][GRANT]\\\" value=\\\"1\\\">\\n            <span class=\\\"icon-checkbox\\\"></span>\\n        </label>\\n    </td>\\n    <td>\\n        <label>\\n            <input type=\\\"checkbox\\\" class=\\\"privilege-WRITE\\\" name=\\\"users[\";\n  if (helper = helpers.user) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.user); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"][WRITE]\\\" value=\\\"1\\\" checked>\\n            <span class=\\\"icon-checkbox\\\"></span>\\n        </label>\\n    </td>\\n    <td>\\n        <label>\\n            <input type=\\\"checkbox\\\" class=\\\"privilege-READ\\\" name=\\\"users[\";\n  if (helper = helpers.user) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.user); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"][READ]\\\" value=\\\"1\\\" checked>\\n            <span class=\\\"icon-checkbox\\\"></span>\\n        </label>\\n    </td>\\n    <td>\\n        <button type=\\\"button\\\" class=\\\"small delete_permission btn-warning\\\" data-acl-user=\\\"\";\n  if (helper = helpers.user) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.user); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-acl-type=\\\"\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-acl-label=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" >\\n            <span class=\\\"icon-bin\\\"></span>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Remove\", options) : helperMissing.call(depth0, \"__\", \"Remove\", options)))\n    + \"\\n        </button>\\n    </td>\\n</tr>\";\n  return buffer;\n  });\n});\n\n",
    "/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2020 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n */\ndefine('taoDacSimple/controller/admin/index',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'tpl!taoDacSimple/controller/admin/line',\n    'helpers',\n    'ui/feedback',\n    'ui/autocomplete',\n    'ui/tooltip',\n    'core/request',\n    'ui/taskQueue/taskQueue',\n    'ui/taskQueueButton/standardButton',\n], function (\n    $,\n    _,\n    __,\n    lineTpl,\n    helpers,\n    feedback,\n    autocomplete,\n    tooltip,\n    request,\n    taskQueue,\n    taskCreationButtonFactory\n) {\n    'use strict';\n\n    /**\n     * The warning message shown when all managers have been removed\n     * @type {String}\n     */\n    const errorMsgManagePermission = __('You must have one role or user that have the manage permission on this element.');\n\n    /**\n     * tooltip instance that serves all methods with same tooltip data and its state\n     * @type {Tooltip}\n     */\n    let errorTooltip;\n    /**\n     * Checks the managers, we need at least one activated manager.\n     * @param {jQuery|Element|String} container\n     * @returns {Boolean} Returns `true` if there is at least one manager in the list\n     * @private\n     */\n    const _checkManagers = function (container) {\n        const $managers = $(container).find('.privilege-GRANT:checked');\n        let checkOk = true;\n\n        if (!$managers.length) {\n            checkOk = false;\n        }\n        return checkOk;\n    };\n\n    /**\n     * Avoids to remove all managers\n     * @param {jQuery|Element|String} container\n     * @private\n     */\n    const _preventManagerRemoval = function (container) {\n        const $form = $(container).closest('form');\n        let $submitter = $(':submit', $form);\n        if ($submitter.length === 0) {\n            $submitter = $('.bottom-bar button', $form);\n        }\n\n        if (!_checkManagers($form)) {\n            $submitter.addClass('disabled');\n            errorTooltip = tooltip.warning($submitter, errorMsgManagePermission, {\n                placement : 'bottom',\n                trigger: \"hover\",\n            });\n            feedback().warning(errorMsgManagePermission);\n        } else {\n            $submitter.removeClass('disabled');\n            if(errorTooltip){\n                errorTooltip.dispose();\n            }\n        }\n    };\n\n    /**\n     * Allow to enable / disable the access checkbox based on the state of the grant privilege\n     * @param {jQuery|Element|String} container\n     * @private\n     */\n    const _disableAccessOnGrant = function (container) {\n        const $container = $(container);\n\n        const $managersChecked = $container.find('.privilege-GRANT:checked').closest('tr');\n        const $cantChangeWrite = $managersChecked.find('.privilege-WRITE');\n        const $cantChangeRead = $managersChecked.find('.privilege-READ');\n\n        const $managers = $container.find('.privilege-GRANT').not(':checked').closest('tr');\n        const $canChangeWrite = $managers.find('.privilege-WRITE');\n        const $canChangeRead = $managers.find('.privilege-READ');\n\n        $canChangeWrite.removeClass('disabled');\n        $canChangeRead.removeClass('disabled');\n\n        $cantChangeWrite.addClass('disabled').prop('checked', true);\n        $cantChangeRead.addClass('disabled').prop('checked', true);\n\n        _preventManagerRemoval($container);\n        _disableAccessOnWrite($container);\n    };\n\n    /**\n     * Allow to enable / disable the access checkbox based on the state of the write privilege\n     * @param {jQuery|Element|String} container\n     * @private\n     */\n    const _disableAccessOnWrite = function (container) {\n        const $container = $(container);\n\n        const $writersChecked = $container.find('.privilege-WRITE:checked').closest('tr');\n        const $cantChangeRead = $writersChecked.find('.privilege-READ');\n\n        const $writers = $container.find('.privilege-WRITE').not(':checked').closest('tr');\n        const $canChangeRead = $writers.find('.privilege-READ');\n\n        $canChangeRead.removeClass('disabled');\n\n        $cantChangeRead.addClass('disabled').prop('checked', true);\n    };\n\n    /**\n     * Delete a permission row for a user/role\n     * @param  {DOM Element} element DOM element that triggered the function\n     * @private\n     */\n    const _deletePermission = function (element) {\n        // 1. Get the user / role\n        const $this = $(element);\n        const $container = $this.closest('table');\n        const type = $this.data('acl-type');\n        const user = $this.data('acl-user');\n        const label = $this.data('acl-label');\n\n        // 2. Remove it from the list\n        if (!_.isEmpty(type) && !_.isEmpty(user) && !_.isEmpty(label)) {\n            $this.closest('tr').remove();\n        }\n\n        _preventManagerRemoval($container);\n    };\n\n    /**\n     * Checks if a permission has already been added to the list.\n     * Highlight the list if the permission is already in the list.\n     * @param {jQuery|Element|String} container\n     * @param {String} type role/user regarding what it will be added.\n     * @param {String} id The identifier of the resource.\n     * @returns {boolean} Returns true if the permission is already in the list\n     * @private\n     */\n    const _checkPermission = function (container, type, id) {\n        const $btn = $(container).find('button[data-acl-user=\"' + id + '\"]'),\n            $line = $btn.closest('tr');\n\n        if ($line.length) {\n            $line.effect('highlight', {}, 1500);\n            return true;\n        }\n\n        return false;\n    };\n\n    /**\n     * Add a new lines into the permissions table regarding what is selected into the add-* select\n     * @param {jQuery|Element|String} container\n     * @param {String} type role/user regarding what it will be added.\n     * @param {String} id The identifier of the resource.\n     * @param {String} label The label of the resource.\n     * @private\n     */\n    const _addPermission = function (container, type, id, label) {\n        const $container = $(container),\n            $body = $container.find('tbody').first();\n\n        // only add the permission if it's not already present in the list\n        if (!_checkPermission($container, type, id)) {\n            $body.append(lineTpl({\n                type: type,\n                user: id,\n                label: label\n            }));\n            _disableAccessOnGrant($container);\n        }\n    };\n\n    /**\n     * Ensures that if you give the manage (GRANT) permission, access (WRITE and READ) permissions are given too\n     * Listens all clicks on delete buttons to call the _deletePermission function\n     * @param {jQuery|Element|String} container The container on which apply the listeners\n     * @private\n     */\n    const _installListeners = function(container) {\n        const $container = $(container);\n        $container.on('click', '.privilege-GRANT:not(.disabled) ', function () {\n            _disableAccessOnGrant($container);\n        }).on('click', '.privilege-WRITE:not(.disabled) ', function () {\n            _disableAccessOnWrite($container);\n        }).on('click', '.delete_permission:not(.disabled)', function (event) {\n            event.preventDefault();\n            _deletePermission(this);\n        });\n    };\n\n\n    /**\n     * Installs a search purpose autocompleter onto an element.\n     * @param {jQuery|Element|String} element The element on which install the autocompleter\n     * @param {jQuery|Element|String} appendTo Container where suggestions will be appended. Default value document.body. Make sure to set position: absolute or position: relative for that element\n     * @param {Function} onSelectItem - The selection callback\n     * @returns {Autocompleter} Returns the instance of the autocompleter component\n     */\n    const _searchFactory = function (element, appendTo, onSelectItem) {\n        const autocompleteOptions = {\n            isProvider: true,\n            preventSubmit: true,\n            appendTo: appendTo,\n            ontologyParam: ['rootNode', 'parentNode'],\n            params: {\n                'params[structure]': '',\n                rows: 20,\n                page: 1,\n                parentNode: ''\n            },\n            labelField: 'label'\n        };\n        if (_.isFunction(onSelectItem)) {\n            autocompleteOptions.onSelectItem = onSelectItem;\n        }\n        return autocomplete(element, autocompleteOptions);\n    };\n\n    const mainCtrl = {\n        start: function start () {\n\n            const $container = $('.permission-container');\n            const $form = $('form', $container);\n            const $oldSubmitter = $(':submit', $form);\n\n            _disableAccessOnGrant('#permissions-table-users');\n            _disableAccessOnGrant('#permissions-table-roles');\n\n            // install autocomplete for user add\n            _searchFactory('#add-user', '#add-user-wrapper', function (event, value, label) {\n                $('#add-user').focus();\n                _addPermission('#permissions-table-users', 'user', value, label);\n            });\n\n            // install autocomplete for role add\n            _searchFactory('#add-role','#add-role-wrapper', function (event, value, label) {\n                $('#add-role').focus();\n                _addPermission('#permissions-table-roles', 'role', value, label);\n            });\n\n            // ensure that if you give the manage (GRANT) permission, access (WRITE and READ) permissions are given too\n            _installListeners('#permissions-table-users');\n            _installListeners('#permissions-table-roles');\n\n            //find the old submitter and replace it with the new component\n            const taskCreationButton = taskCreationButtonFactory({\n                type : 'info',\n                icon : 'save',\n                title : __('Save'),\n                label : __('Save'),\n                taskQueue : taskQueue,\n                taskCreationUrl : $form.attr('action'),\n                taskCreationData : function taskCreationData() {\n                    return $form.serializeArray();\n                },\n                taskReportContainer : $container\n            }).on('finished', function(result){\n                if (result.task\n                    && result.task.report\n                    && _.isArray(result.task.report.children)\n                    && result.task.report.children.length\n                    && result.task.report.children[0]) {\n                    if(result.task.report.children[0].type === 'success'){\n                        feedback().success(__('Permissions saved'));\n                    } else {\n                        feedback().error( __('Error'));\n                    }\n                }\n            }).on('error', function(err){\n                //format and display error message to user\n                feedback().error(err);\n            }).render($oldSubmitter.closest('.bottom-bar'));\n\n            //replace the old submitter with the new one and apply its style\n            $oldSubmitter.replaceWith(taskCreationButton.getElement().css({float: 'right'}));\n\n            $form.on('submit', function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            });\n        }\n    };\n\n    return mainCtrl;\n});\n\n",
    "/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2014 (original work) Open Assessment Technologies SA (under the project TAO-PRODUCT);\n *\n *\n */\n\ndefine('taoDacSimple/controller/routes',[],function(){\n    'user strict';\n    return {\n        'AdminAccessController' : {\n            'css': 'admin', \n            'actions' : {\n                'adminPermissions' : 'controller/admin/index'\n            }\n        }\n    };\n});\n\n",
    "\ndefine(\"taoDacSimple/loader/taoDacSimple.bundle\", function(){});\n"
  ]
}